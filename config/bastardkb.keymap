#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

// The default keymap is roughly on Miryoku layout
// (https://github.com/manna-harbour/miryoku).
// Customize on your own on the config folder.

/ {
    behaviors {
        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <120>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <160>;
            retro-tap;
        };

        htl: htl {
            compatible = "zmk,behavior-hold-tap";
            label = "HTL";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            retro-tap;
        };

        html: html {
            compatible = "zmk,behavior-hold-tap";
            label = "HTML";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            retro-tap;
            hold-trigger-key-positions = <11 12>;
        };

        ht_gui: ht_gui {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_GUI";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            retro-tap;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W        &kp F         &kp P              &kp B                              &kp J       &kp L              &kp U         &kp Y         &kp SQT
&ht_gui LGUI A  &htl LALT R  &htl LCTRL S  &hold_tap LSHFT T  &kp G                              &kp M       &hold_tap RSHFT N  &htl RCTRL E  &htl RALT I   &ht_gui RGUI O
&lt 7 Z         &lt 8 X      &lt 9 C       &kp D              &kp V                              &kp K       &kp H              &lt 9 COMMA   &lt 8 PERIOD  &lt 7 SLASH
                                                              &lt 1 SPACE  &lt 5 TAB  &lt 2 RET  &lt 3 BSPC  &lt 4 ESC
            >;
        };

        nav_layer {
            bindings = <
&none     &none     &kp LC(F)  &none      &none                   &kp LC(Y)  &kp LC(V)  &kp LC(C)       &kp LC(X)     &kp LC(Z)
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none                   &kp CAPS   &kp LEFT   &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW
&none     &none     &none      &none      &none                   &kp INS    &kp HOME   &kp PAGE_DOWN   &kp PAGE_UP   &kp END
                                          &trans  &none  &kp RET  &kp BSPC   &kp DEL
            >;
        };

        sym_layer {
            bindings = <
&kp LBRC   &kp AMPS  &kp STAR   &kp LPAR   &kp RBRC                     &none  &none      &none      &none     &none
&kp COLON  &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS                     &none  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
&kp TILDE  &kp EXCL  &kp AT     &kp HASH   &kp PIPE                     &none  &kp BSPC   &kp COMMA  &kp DOT   &kp SLASH
                                           &kp RPAR  &kp UNDER  &trans  &none  &none
            >;
        };

        num_layer {
            bindings = <
&kp LBKT   &kp N7  &kp N8  &kp N9  &kp RBKT                     &none   &none      &none      &none     &none
&kp SEMI   &kp N4  &kp N5  &kp N6  &kp EQUAL                    &none   &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp BSLH                     &none   &kp BSPC   &kp COMMA  &kp DOT   &kp SLASH
                                   &kp N0     &kp MINUS  &none  &trans  &none
            >;
        };

        fun_layer {
            bindings = <
&kp F12  &kp F7  &kp F8  &kp F9  &kp PSCRN                        &none  &none      &none      &none     &bootloader
&kp F11  &kp F4  &kp F5  &kp F6  &kp SLCK                         &none  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
&kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK                  &none  &kp K_APP  &none      &none     &none
                                 &kp SPACE        &kp TAB  &none  &none  &trans
            >;
        };

        media_layer {
            bindings = <
&bootloader  &none     &none      &none      &none                      &none         &none         &none         &none         &none
&kp LGUI     &kp LALT  &kp LCTRL  &kp LSHFT  &none                      &out OUT_TOG  &kp C_PREV    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT
&none        &none     &none      &none      &none                      &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
                                             &none  &trans  &kp C_STOP  &kp C_PP      &kp C_MUTE
            >;
        };

        game_layer {
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E  &kp R                    &none         &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none
&kp LEFT_SHIFT  &kp A  &kp S  &kp D  &kp F                    &none         &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &none
&kp LCTRL       &kp Z  &kp X  &kp C  &kp V                    &none         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none
                                     &kp SPACE  &kp G  &none  &kp NUMBER_0  &none
            >;
        };

        mouse_layer {
            bindings = <
&none     &none     &none      &none      &none                            &none      &none      &none      &none     &none
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none                            &none      &kp RSHFT  &kp LCTRL  &kp RALT  &kp RGUI
&trans    &mo 8     &mo 9      &none      &none                            &none      &none      &mo 9      &mo 8     &trans
                                          &mkp LCLK  &mkp RCLK  &mkp RCLK  &mkp LCLK  &mkp MCLK
            >;
        };

        scroll_layer {
            bindings = <
&none     &none     &none      &none      &none                            &none      &none      &none      &none     &none
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none                            &none      &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
&mo 7     &trans    &mo 9      &none      &none                            &none      &none      &mo 9      &trans    &mo 7
                                          &mkp LCLK  &mkp RCLK  &mkp RCLK  &mkp LCLK  &mkp MCLK
            >;
        };

        snipe_layer {
            bindings = <
&none     &none     &none      &none      &none                            &none      &none      &none      &none     &none
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none                            &none      &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
&mo 7     &mo 8     &trans     &none      &none                            &none      &none      &trans     &mo 8     &mo 7
                                          &mkp LCLK  &mkp RCLK  &mkp RCLK  &mkp LCLK  &mkp MCLK
            >;
        };

        auto_mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans                     &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                     &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                     &trans     &trans     &trans  &trans  &trans
                                &trans  &trans  &mkp RCLK  &mkp LCLK  &mkp MCLK
            >;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        f13 {
            timeout-ms = <50>;
            key-positions = <32 31>;
            bindings = <&kp F13>;
        };

        Game_Layer {
            bindings = <&to 6>;
            key-positions = <35 29 34>;
        };

        Base_Layer {
            bindings = <&to 0>;
            key-positions = <35 19 34>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <14 15>;
        };
    };
};
