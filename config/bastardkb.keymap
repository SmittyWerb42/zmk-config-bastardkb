#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

// The default keymap is roughly on Miryoku layout
// (https://github.com/manna-harbour/miryoku).
// Customize on your own on the config folder.

#define BASE    0
#define NAV     1
#define SYM     2
#define NUM     3
#define FUN     4
#define MED     5
#define MOU     6

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q       &kp W       &kp F        &kp P        &kp B                                    &kp J         &kp L        &kp U        &kp Y         &kp SQT
&hm LGUI A  &hm LALT R  &hm LCTRL S  &hm LSHFT T  &kp G                                    &kp M         &hm LSHFT N  &hm LCTRL E  &hm LALT I    &hm LGUI O
&kp Z       &hm RALT X  &kp C        &kp D        &kp V                                    &kp K         &kp H        &kp COMMA    &hm RALT DOT  &kp FSLH
                                     &lt MED ESC  &lt NAV SPACE  &lt MOU TAB  &lt SYM RET  &lt NUM BSPC  &lt FUN DEL
            >;
        };

        nav_layer {
            bindings = <
&none     &none     &kp LC(F)  &none      &none                   &kp LC(Y)  &kp LC(V)  &kp LC(C)       &kp LC(X)     &kp LC(Z)
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none                   &kp CAPS   &kp LEFT   &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW
&none     &none     &none      &none      &none                   &kp INS    &kp HOME   &kp PAGE_DOWN   &kp PAGE_UP   &kp END
                               &none      &trans  &none  &kp RET  &kp BSPC   &kp DEL
            >;
        };

        sym_layer {
            bindings = <
&kp LBRC   &kp AMPS  &kp STAR   &kp LPAR   &kp RBRC                     &none  &none      &none      &none     &none
&kp COLON  &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS                     &none  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
&kp TILDE  &kp EXCL  &kp AT     &kp HASH   &kp PIPE                     &none  &none      &none      &none     &none
                                &kp LPAR   &kp RPAR  &kp UNDER  &trans  &none  &none
            >;
        };

        num_layer {
            bindings = <
&kp LBKT   &kp N7  &kp N8  &kp N9   &kp RBKT                     &none   &none      &none      &none     &none
&kp SEMI   &kp N4  &kp N5  &kp N6   &kp EQUAL                    &none   &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
&kp GRAVE  &kp N1  &kp N2  &kp N3   &kp BSLH                     &none   &none      &none      &none     &none
                           &kp DOT  &kp N0     &kp MINUS  &none  &trans  &none
            >;
        };

        fun_layer {
            bindings = <
&kp F12  &kp F7  &kp F8  &kp F9     &kp PSCRN                        &none  &none      &none      &none     &none
&kp F11  &kp F4  &kp F5  &kp F6     &kp SLCK                         &none  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
&kp F10  &kp F1  &kp F2  &kp F3     &kp PAUSE_BREAK                  &none  &none      &none      &none     &none
                         &kp K_APP  &kp SPACE        &kp TAB  &none  &none  &trans
            >;
        };

        media_layer {
            bindings = <
&none     &none     &none      &none      &none                     &none         &none         &none         &none         &none
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none                     &out OUT_TOG  &kp C_PREV    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT
&none     &none     &none      &none      &none                     &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
                               &trans     &none  &none  &kp C_STOP  &kp C_PP      &kp C_MUTE
            >;
        };

        mouse_layer {
            bindings = <
&none     &none     &none      &none      &none                     &kp LC(Y)  &kp LC(V)       &kp LC(C)       &kp LC(X)     &kp LC(Z)
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none                     &none      &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT
&none     &none     &none      &none      &none                     &none      &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT
                               &none      &none  &trans  &mkp RCLK  &mkp LCLK  &mkp MCLK
            >;
        };

        game_layer {
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E  &kp R                    &none         &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none
&kp LEFT_SHIFT  &kp A  &kp S  &kp D  &kp F                    &none         &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &none
&kp LCTRL       &kp Z  &kp X  &kp C  &kp V                    &none         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none
                              &kp T  &kp SPACE  &kp G  &none  &kp NUMBER_0  &none
            >;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&kp F13>;
        };

        Game_Layer {
            bindings = <&to 7>;
            key-positions = <35 29>;
        };

        Base_Layer {
            bindings = <&to 0>;
            key-positions = <35 19>;
        };
    };
};
